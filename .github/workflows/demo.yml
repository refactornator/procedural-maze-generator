name: Demo and Examples

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  demo-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9, "3.10", "3.11"]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -e ".[dev]"
    
    - name: Test demo script imports
      run: |
        python -c "import sys; sys.path.append('demo'); import interactive_demo"
        python -c "import sys; sys.path.append('demo'); import generate_samples"

    - name: Test maze-gen CLI installation
      run: |
        maze-gen --version || echo "maze-gen not in PATH, checking installation"
        python -c "import maze_generator; print('Package imported successfully')"

    - name: Test minimal imports
      run: |
        python test_minimal_imports.py
    
    - name: Run sample generation
      run: |
        cd demo
        python generate_samples.py || echo "Sample generation failed, continuing..."
    
    - name: Test CLI commands used in demo
      run: |
        maze-gen --help
        maze-gen generate --help
        maze-gen solve --help
        maze-gen output --help
        maze-gen benchmark --help
    
    - name: Run quick demo test
      run: |
        python demo/interactive_demo.py --quick || true
    
    - name: Verify demo outputs
      run: |
        ls -la demo/samples/ || true
        ls -la demo/readme_examples/ || true
    
    - name: Upload demo artifacts
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: demo-outputs-${{ matrix.python-version }}
        path: |
          demo/samples/
          demo/readme_examples/
          demo_output/
        retention-days: 7

  shell-demo-test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.10"
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -e ".[dev]"
    
    - name: Test shell demo script
      run: |
        chmod +x demo/demo.sh
        echo "Testing shell demo script..."
        # Test that the script runs without errors (quick mode)
        timeout 60 ./demo/demo.sh --quick || echo "Shell demo completed with issues"
        echo "Shell demo test completed"
    
    - name: Verify shell demo outputs
      run: |
        echo "=== Shell demo output verification ==="
        ls -la demo_output/ || echo "No demo_output directory found"
        echo "=== Files in current directory ==="
        ls -la *.png *.txt *.svg 2>/dev/null || echo "No output files in current directory"
        echo "=== All files in demo_output ==="
        find demo_output/ -type f 2>/dev/null || echo "No files in demo_output"

    - name: Upload shell demo artifacts
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: shell-demo-outputs
        path: |
          demo_output/
          *.png
          *.txt
          *.svg
          demo/
        retention-days: 7
        include-hidden-files: false

  example-tests:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.10"
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -e ".[dev]"
    
    - name: Test basic usage example
      run: |
        cd examples
        echo "Testing basic_usage.py..."
        python basic_usage.py || echo "basic_usage.py failed, continuing..."
        echo "Files created by basic_usage.py:"
        ls -la *.png *.txt *.svg 2>/dev/null || echo "No output files found"

    - name: Test output directory demo
      run: |
        cd examples
        echo "Testing output_directory_demo.py..."
        python output_directory_demo.py || echo "output_directory_demo.py failed, continuing..."
        echo "Files in demo_output:"
        ls -la demo_output/ 2>/dev/null || echo "No demo_output directory found"

    - name: Test performance comparison
      run: |
        cd examples
        echo "Testing performance_comparison.py..."
        timeout 120 python performance_comparison.py || echo "performance_comparison.py failed, continuing..."

    - name: Run comprehensive example test
      run: |
        echo "Running comprehensive example test suite..."
        python test_examples.py || echo "Example test suite completed with issues"
    
    - name: List all generated files
      run: |
        echo "=== Files in examples directory ==="
        find examples/ -type f -name "*.png" -o -name "*.txt" -o -name "*.svg" 2>/dev/null || echo "No output files in examples/"
        echo "=== Files in current directory ==="
        find . -maxdepth 1 -type f -name "*.png" -o -name "*.txt" -o -name "*.svg" 2>/dev/null || echo "No output files in current directory"
        echo "=== Files in demo_output ==="
        find demo_output/ -type f 2>/dev/null || echo "No demo_output directory or files"
        echo "=== All files in examples ==="
        ls -la examples/ || echo "Examples directory not accessible"

    - name: Upload example outputs
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: example-outputs
        path: |
          examples/
          demo_output/
          *.png
          *.txt
          *.svg
        retention-days: 7
        include-hidden-files: false
